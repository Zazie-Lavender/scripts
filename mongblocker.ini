[script]
n0=;Mongblocker allows us to track mongs and dynamically ignore them based on activity. 
n1=;Each ignore is a 15 minute block, which should be unevadable based on their current address.
n2=;The Mong Blocker is meant to allow for idiots/spammers to be ignored for as long as we want,
n3=;without cluttering up the ignore list unnecessarily or having a huge list we can't manage
n4=;If we want an existing MongBlocker mask ignore to stick we just unset the -u (unset in) parameter in the
n5=;address book's ignore list.
n6=;With the correct masks however, you can detect your least favorite mongs and auto-ignore them
n7=;whenever they pop up...no matter what they change about their client info.
n8=;In future versions, we may pull a /who to determine their realname and match this...however
n9=;this will only allow detection of existing mongs if you specified their realname when adding them
n10=;Not sure how easily mIRC gets and stores GECOS info natively.
n11=;deduplicated some commands. Easier to debug if we're calling an alias to do what we need, we can debug that alias and debug entire script
n12=;Disabled the echo on detect, as this was more of a debug line than anything else. Code has been considered stable enough to not ignore innocents
n13=
n14=
n15=on ^mong:text:*:*: { 
n16=  mongblock $nick
n17=  ;echo -a 6Mong Detected! $nick matches Mong List Entry: $ulist($fulladdress,mong,1) Reason: $ulist($fulladdress,mong,1).info ( $+ $network $+ )
n18=  addmong $nick Auto
n19=  ;Have an addmong line here to refresh their listings and add their new identities to the list if they match one of our masks
n20=  ;mIRC shouldn't have any duplication issues; it will just list what we attempted to add to the userlist, thus providing information
n21=  ;should we decide to later run an /addmongmask command.
n22=}
n23=
n24=;Clean up when mongs leave IRC.
n25=on ^mong:quit: {
n26=  ruser =mong $nick 10
n27=  ruser =mong $nick 18
n28=  ruser =mong $nick 0
n29=  ruser =mong $nick 17
n30=}
n31=
n32=on ^mong:part:#: {
n33=  ruser =mong $nick 10
n34=  ruser =mong $nick 18
n35=  ruser =mong $nick 0
n36=  ruser =mong $nick 17
n37=}
n38=
n39=on ^mong:kick:#: {
n40=  ruser =mong $knick 10
n41=  ruser =mong $knick 18
n42=  ruser =mong $knick 0
n43=  ruser =mong $knick 17
n44=}
n45=
n46=;Disabling maskpattern 2 from ignore commands because it might unnecessarily constrain innocent users. 
n47=;A similar risk lies with maskpattern 12 but is less likely.
n48=;replaced maskpattern 2 with 10
n49=;replaced maskpattern 4 with 14, 12 with 18, and 14 with 17 (Hopefully these will faithfully hit our targets through nickchanges.)
n50=
n51=alias ActMong { hdump ActMongs }
n52=
n53=alias addmong {
n54=  guser =mong $$1 10 $2-
n55=  guser =mong $$1 18 $2-
n56=  guser =mong $$1 0 $2-
n57=  guser =mong $$1 17 $2-
n58=  hadd -mu900 ActMongs $nick $ulist($fulladdress,mong,1) $ulist($fulladdress,mong,1).info $network
n59=}
n60=
n61=alias mongblock {
n62=  ignore -pntcdiku900 $1 $network
n63=  ignore -pntcdiku900 $1 10 $network 
n64=  ignore -pntcdiku900 $1 18 $network 
n65=  ignore -pntcdiku900 $1 17 $network 
n66=}
n67=
n68=alias addmongmask {
n69=  auser =mong $$1-
n70=}
n71=
n72=alias delmong {
n73=  ruser =mong $$1
n74=}
