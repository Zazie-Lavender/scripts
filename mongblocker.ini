[script]
n0=;Mongblocker allows us to track mongs and dynamically ignore them based on activity. 
n1=;Each ignore is a 15 minute block, which should be unevadable based on their current address.
n2=;The Mong Blocker is meant to allow for idiots/spammers to be ignored for as long as we want,
n3=;without cluttering up the ignore list unnecessarily or having a huge list we can't manage
n4=;If we want an existing MongBlocker mask ignore to stick we just unset the -u (unset in) parameter in the
n5=;address book's ignore list.
n6=;With the correct masks however, you can detect your least favorite mongs and auto-ignore them
n7=;whenever they pop up...no matter what they change about their client info.
n8=;In future versions, we may pull a /who to determine their realname and match this...however
n9=;this will only allow detection of existing mongs if you specified their realname when adding them
n10=;Not sure how easily mIRC gets and stores GECOS info natively.
n11=
n12=on ^mong:text:*:*: { 
n13=  ignore -pntcdiku 900 $nick $network
n14=  ignore -pntcdiku 900 $address($nick,2) $network
n15=  ignore -pntcdiku 900 $address($nick,0) $network
n16=  ignore -pntcdiku 900 $address($nick,4) $network
n17=  ignore -pntcdiku 900 $address($nick,12) $network
n18=  echo -a 6Mong Detected! $nick matches Mong List Entry: $ulist($fulladdress,mong,1) Reason: $ulist($fulladdress,mong,1).info ( $+ $network $+ )
n19=  addmong $nick
n20=  ;Have an addmong line here to refresh their listings and add their new identities to the list if they match one of our masks
n21=  ;mIRC shouldn't have any duplication issues; it will just list what we attempted to add to the userlist, thus providing information
n22=  ;should we decide to later run an /addmongmask command.
n23=}
n24=
n25=alias addmong {
n26=  guser =mong $$1 2 $2-
n27=  guser =mong $$1 12 $2-
n28=  guser =mong $$1 0 $2-
n29=  guser =mong $$1 4 $2-
n30=}
n31=
n32=alias addmongmask {
n33=  auser =mong $$1-
n34=}
n35=
n36=alias delmong {
n37=  ruser =mong $$1
n38=}
